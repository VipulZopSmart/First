// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_product is a generated GoMock package.
package product

import (
	model "awesomeProject/catalog/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStore is a mock of Store interface
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// Getbyid mocks base method
func (m *MockStore) Getbyid(id int) (model.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Getbyid", id)
	ret0, _ := ret[0].(model.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Getbyid indicates an expected call of Getbyid
func (mr *MockStoreMockRecorder) Getbyid(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Getbyid", reflect.TypeOf((*MockStore)(nil).Getbyid), id)
}
