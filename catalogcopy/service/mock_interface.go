// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package service is a generated GoMock package.
package service

import (
	model "awesomeProject/catalog/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockProduct is a mock of Product interface
type MockProduct struct {
	ctrl     *gomock.Controller
	recorder *MockProductMockRecorder
}

// MockProductMockRecorder is the mock recorder for MockProduct
type MockProductMockRecorder struct {
	mock *MockProduct
}

// NewMockProduct creates a new mock instance
func NewMockProduct(ctrl *gomock.Controller) *MockProduct {
	mock := &MockProduct{ctrl: ctrl}
	mock.recorder = &MockProductMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProduct) EXPECT() *MockProductMockRecorder {
	return m.recorder
}

// Getbyid mocks base method
func (m *MockProduct) Getbyid(id int) (model.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Getbyid", id)
	ret0, _ := ret[0].(model.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Getbyid indicates an expected call of Getbyid
func (mr *MockProductMockRecorder) Getbyid(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Getbyid", reflect.TypeOf((*MockProduct)(nil).Getbyid), id)
}

// Create mocks base method
func (m *MockProduct) Create(p model.Product) (model.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", p)
	ret0, _ := ret[0].(model.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockProductMockRecorder) Create(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockProduct)(nil).Create), p)
}

// Deletebyid mocks base method
func (m *MockProduct) Deletebyid(id int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deletebyid", id)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Deletebyid indicates an expected call of Deletebyid
func (mr *MockProductMockRecorder) Deletebyid(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deletebyid", reflect.TypeOf((*MockProduct)(nil).Deletebyid), id)
}
